Version 3.2 HI-TECH Software Intermediate Code
[c E1 0 1 2 .. ]
[n E1 . e_Off e_ColourA e_ColourB  ]
[s S1 `i 1 `E1 1 ]
[n S1 SequencePhaseStruct NextActionTime CurrentColour ]
[s S2 `*S1 1 `i 1 `i 1 ]
[n S2 ASequenceStruct Sequence Size Current ]
[; ;OutputSequences.h: 11: typedef enum
[; ;OutputSequences.h: 12: {
[; ;OutputSequences.h: 13: e_Off,
[; ;OutputSequences.h: 14: e_ColourA,
[; ;OutputSequences.h: 15: e_ColourB
[; ;OutputSequences.h: 16: }t_ButtonColour;
[; ;OutputSequences.h: 18: typedef struct SequencePhaseStruct
[; ;OutputSequences.h: 19: {
[; ;OutputSequences.h: 20: int NextActionTime;
[; ;OutputSequences.h: 21: t_ButtonColour CurrentColour;
[; ;OutputSequences.h: 22: }SequencePhase;
[; ;OutputSequences.h: 24: typedef struct ASequenceStruct
[; ;OutputSequences.h: 25: {
[; ;OutputSequences.h: 26: SequencePhase *Sequence;
[; ;OutputSequences.h: 27: int Size;
[; ;OutputSequences.h: 28: int Current;
[; ;OutputSequences.h: 29: }ASequence;
[; ;OutputSequences.h: 31: void InitSequences( void );
[; ;OutputSequences.h: 32: ASequence* GetSequencePointer( int theId );
"3 source/OutputSequences.c
[v _SequencesCount `Ci ~T0 @X0 1 e ]
[i _SequencesCount
-> 5 `i
]
[; ;OutputSequences.c: 3: const int SequencesCount = 5;
"4
[v _Sequences `S2 ~T0 @X0 -> 5 `i e ]
[; ;OutputSequences.c: 4: ASequence Sequences[ 5 ];
"6
[v _RedGreenPhases `Ci ~T0 @X0 1 e ]
[i _RedGreenPhases
-> 2 `i
]
[; ;OutputSequences.c: 6: const int RedGreenPhases = 2;
"7
[v _RedGreenSequence `S1 ~T0 @X0 -> 2 `i e ]
[; ;OutputSequences.c: 7: SequencePhase RedGreenSequence[ 2 ];
"11
[v _InitSequences `(v ~T0 @X0 1 ef ]
{
[; ;OutputSequences.c: 10: void InitSequences()
[; ;OutputSequences.c: 11: {
[e :U _InitSequences ]
[f ]
[; ;OutputSequences.c: 12: RedGreenSequence[ 0 ].CurrentColour = e_ColourA;
"12
[e = . *U + &U _RedGreenSequence * -> -> -> 0 `i `ui `ux -> -> # *U &U _RedGreenSequence `ui `ux 1 -> . `E1 1 `E1 ]
[; ;OutputSequences.c: 13: RedGreenSequence[ 0 ].NextActionTime = 10;
"13
[e = . *U + &U _RedGreenSequence * -> -> -> 0 `i `ui `ux -> -> # *U &U _RedGreenSequence `ui `ux 0 -> 10 `i ]
[; ;OutputSequences.c: 14: RedGreenSequence[ 1 ].CurrentColour = e_ColourB;
"14
[e = . *U + &U _RedGreenSequence * -> -> -> 1 `i `ui `ux -> -> # *U &U _RedGreenSequence `ui `ux 1 -> . `E1 2 `E1 ]
[; ;OutputSequences.c: 15: RedGreenSequence[ 1 ].NextActionTime = 10;
"15
[e = . *U + &U _RedGreenSequence * -> -> -> 1 `i `ui `ux -> -> # *U &U _RedGreenSequence `ui `ux 0 -> 10 `i ]
[; ;OutputSequences.c: 17: Sequences[ 0 ].Sequence = &RedGreenSequence[ 0 ];
"17
[e = . *U + &U _Sequences * -> -> -> 0 `i `ui `ux -> -> # *U &U _Sequences `ui `ux 0 &U *U + &U _RedGreenSequence * -> -> -> 0 `i `ui `ux -> -> # *U &U _RedGreenSequence `ui `ux ]
[; ;OutputSequences.c: 18: Sequences[ 0 ].Size = RedGreenPhases;
"18
[e = . *U + &U _Sequences * -> -> -> 0 `i `ui `ux -> -> # *U &U _Sequences `ui `ux 1 _RedGreenPhases ]
[; ;OutputSequences.c: 19: Sequences[ 0 ].Current = 0;
"19
[e = . *U + &U _Sequences * -> -> -> 0 `i `ui `ux -> -> # *U &U _Sequences `ui `ux 2 -> 0 `i ]
[; ;OutputSequences.c: 20: }
"20
[e :UE 3 ]
}
"23
[v _GetSequencePointer `(*S2 ~T0 @X0 1 ef1`i ]
{
[; ;OutputSequences.c: 22: ASequence* GetSequencePointer( int theId )
[; ;OutputSequences.c: 23: {
[e :U _GetSequencePointer ]
[v _theId `i ~T0 @X0 1 r1 ]
[f ]
"24
[v _SequencePointer `*S2 ~T0 @X0 1 a ]
[; ;OutputSequences.c: 24: ASequence *SequencePointer;
[; ;OutputSequences.c: 26: if ( ( theId >= 0 ) && ( theId <= SequencesCount ) )
"26
[e $ ! && >= _theId -> 0 `i <= _theId _SequencesCount 5  ]
[; ;OutputSequences.c: 27: {
"27
{
[; ;OutputSequences.c: 28: SequencePointer = &Sequences[ theId ];
"28
[e = _SequencePointer &U *U + &U _Sequences * -> -> _theId `ui `ux -> -> # *U &U _Sequences `ui `ux ]
"29
}
[e :U 5 ]
[; ;OutputSequences.c: 29: }
[; ;OutputSequences.c: 31: return SequencePointer;
"31
[e ) _SequencePointer ]
[e $UE 4  ]
[; ;OutputSequences.c: 32: }
"32
[e :UE 4 ]
}
