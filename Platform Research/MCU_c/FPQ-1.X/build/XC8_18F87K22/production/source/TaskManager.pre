
# 1 "source/TaskManager.c"

# 8 "/Applications/microchip/xc8/v1.12/include/stdio.h"
typedef int ptrdiff_t;
typedef unsigned size_t;
typedef unsigned short wchar_t;

# 7 "/Applications/microchip/xc8/v1.12/include/stdarg.h"
typedef void * va_list[1];

#pragma intrinsic(__va_start)
extern void * __va_start(void);

#pragma intrinsic(__va_arg)
extern void * __va_arg(void *, ...);

# 23 "/Applications/microchip/xc8/v1.12/include/stdio.h"
extern int errno;

# 54
struct __prbuf
{
char * ptr;
void (* func)(char);
};

# 17 "/Applications/microchip/xc8/v1.12/include/conio.h"
extern int errno;


extern void init_uart(void);

extern char getch(void);
extern char getche(void);
extern void putch(char);
extern void ungetch(char);

extern __bit kbhit(void);

# 31
extern char * cgets(char *);
extern void cputs(const char *);

# 99 "/Applications/microchip/xc8/v1.12/include/stdio.h"
extern int cprintf(char *, ...);
#pragma printf_check(cprintf)



extern int _doprnt(struct __prbuf *, const register char *, register va_list);


# 191
#pragma printf_check(vprintf) const
#pragma printf_check(vsprintf) const

extern char * gets(char *);
extern int puts(const char *);
extern int scanf(const char *, ...);
extern int sscanf(const char *, const char *, ...);
extern int vprintf(const char *, va_list);
extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
extern int vscanf(const char *, va_list ap);
extern int vsscanf(const char *, const char *, va_list);

#pragma printf_check(printf) const
#pragma printf_check(sprintf) const
extern int sprintf(char *, const char *, ...);
extern int printf(const char *, ...);

# 27 "/Applications/microchip/xc8/v1.12/include/stdlib.h"
typedef struct {
int rem;
int quot;
} div_t;
typedef struct {
unsigned rem;
unsigned quot;
} udiv_t;
typedef struct {
long quot;
long rem;
} ldiv_t;
typedef struct {
unsigned long quot;
unsigned long rem;
} uldiv_t;

# 65
extern double atof(const char *);
extern double strtod(const char *, const char **);
extern int atoi(const char *);
extern unsigned xtoi(const char *);
extern long atol(const char *);
extern long strtol(const char *, char **, int);

extern int rand(void);
extern void srand(unsigned int);
extern void * calloc(size_t, size_t);
extern div_t div(int numer, int denom);
extern udiv_t udiv(unsigned numer, unsigned denom);
extern ldiv_t ldiv(long numer, long denom);
extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
extern unsigned long _lrotl(unsigned long value, unsigned int shift);
extern unsigned long _lrotr(unsigned long value, unsigned int shift);
extern unsigned int _rotl(unsigned int value, unsigned int shift);
extern unsigned int _rotr(unsigned int value, unsigned int shift);




extern void * malloc(size_t);
extern void free(void *);
extern void * realloc(void *, size_t);

extern void abort(void);
extern void exit(int);
extern int atexit(void (*)(void));
extern char * getenv(const char *);
extern char ** environ;
extern int system(char *);
extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
extern int abs(int);
extern long labs(long);


extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 11 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/TaskManager.h"
void TaskManager( void );

# 12 "/Applications/microchip/xc8/v1.12/include/stdbool.h"
typedef unsigned char bool;

# 13 "/Applications/microchip/xc8/v1.12/include/stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 14 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/DataCommsTask.h"
void ConfigureUsart( void );
int DataCommsTask( void );
void CustomerWating( uint8_t theKeyId );
void CustomerBeingServed( uint8_t theKeyId );

# 14 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/InputTask.h"
void InputTask( void );

# 11 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/OutputTask.h"
void OutputTask( void );
void ColourATest( void );
void ColourBTest( void );

# 103 "/Applications/microchip/xc8/v1.12/include/stdlib.h"
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 16 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/TimerTask.h"
typedef struct ATimeStruct
{
volatile uint8_t Millisecond;
volatile uint8_t Second;
volatile uint8_t Minute;
volatile uint8_t Hour;
volatile uint8_t Day;
}t_ATime;

void InitTime( void );
bool MaturedTimer( volatile t_ATime *theTimer );
void CalculateFutureTime( volatile t_ATime *theTimer, uint8_t theMinutes, uint8_t theSeconds, uint8_t theHalfSeconds );
void Increment_Timer( void );

# 14 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/OutputSequences.h"
typedef enum
{
e_Unknown,
e_Off,
e_ColourA,
e_ColourB
}t_ButtonColour;

typedef enum
{
e_NotSet,
e_AllOff,
e_SteadyColourA,
e_SteadyColourB,
e_RedGreenFlash,
e_DimmedColourA,
e_RapidFlashColourB,
e_ColourMix
}t_Sequences;

t_ButtonColour GetColour( t_Sequences theSequences, volatile uint8_t *theState, volatile t_ATime *theTimer );

# 103 "/Applications/microchip/xc8/v1.12/include/stdlib.h"
extern char * itoa(char * buf, int val, int base);
extern char * utoa(char * buf, unsigned val, int base);




extern char * ltoa(char * buf, long val, int base);
extern char * ultoa(char * buf, unsigned long val, int base);

extern char * ftoa(float f, int * status);

# 15 "/Users/David/Projects/FPQ-OnGitHub/Platform Research/MCU_c/FPQ-1.X/source/headers/Model.h"
typedef enum
{
e_Error,
e_PressedNo,
e_PressedYes,
e_BeingServedNo,
e_BeingServedYes
}t_ButtonState;

typedef struct AKeyStruct
{
volatile t_ButtonState ButtonState;
volatile t_ATime InputTimer;
volatile t_ATime NextActionTimer;
volatile t_Sequences SequenceIdPressedNo;
volatile t_Sequences SequenceIdPressedYes;
volatile t_Sequences SequenceIdBeingServedNo;
volatile t_Sequences SequenceIdBeingServedYes;
volatile uint8_t SequenceState;
volatile uint8_t NextInQueue;

# 42
}AKey;

const uint8_t KeyCount = 5;

const uint8_t SequenceReset = 0;

void InitKeys( void );

t_Sequences GetSequence( uint8_t theKeyId );
volatile uint8_t* GetSequenceState( uint8_t theKeyId );
volatile t_ATime* GetKeyTimer( uint8_t theKeyId );
volatile t_ATime* GetKeyInputTimer( uint8_t theKeyId );

void SetKeyState( uint8_t theKeyId, t_ButtonState theState );
t_ButtonState GetKeyState( uint8_t theKeyId );
uint8_t GetHeadOfQueue( void );

# 16 "source/TaskManager.c"
void TaskManager()
{
static uint8_t Operation = 1;

switch( Operation )
{
case 1:
InitTime();
InitKeys();
Operation = 2;
break;

case 2:
Increment_Timer();
DataCommsTask();
InputTask();
Increment_Timer();
OutputTask();
break;
}
}

